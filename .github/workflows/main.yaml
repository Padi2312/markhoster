name: Build and Push MarkHoster Docker Image to GHCR

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  release:
    types: [published]
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: docker/setup-buildx-action@v3

      - uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get version from package.json
        id: pkg
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_OUTPUT

      - name: Set version based on event
        id: version
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "version=dev-${{ github.run_number }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "release" && -n "${{ github.event.release.tag_name }}" ]]; then
            echo "version=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          else
            echo "version=${{ steps.pkg.outputs.version }}" >> $GITHUB_OUTPUT
          fi

      - name: Set build date
        id: builddate
        run: echo "created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Set lowercase image name
        id: imagename
        run: echo "name=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.imagename.outputs.name }}
          tags: |
            type=raw,value=${{ steps.version.outputs.version }}
            type=ref,event=branch,enable=true
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.created=${{ steps.builddate.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.version=${{ steps.version.outputs.version }}
            org.opencontainers.image.prerelease=${{ github.event_name == 'workflow_dispatch' }}

      - uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: ${{ runner.os }}-buildx-

      - name: Build Docker image (local, for scan)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          platforms: linux/amd64
          tags: |
            markhoster:${{ steps.version.outputs.version }}
            ${{ env.REGISTRY }}/${{ steps.imagename.outputs.name }}:${{ steps.version.outputs.version }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

      - name: Scan image for vulnerabilities (local)
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: markhoster:${{ steps.version.outputs.version }}
          format: table
          exit-code: 0

      - name: Push Docker image to GHCR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max

      - run: |
          echo "::notice::Docker image pushed to: ${{ env.REGISTRY }}/${{ steps.imagename.outputs.name }}:${{ steps.version.outputs.version }}"
          echo "::notice::Packages: https://github.com/${{ github.repository }}/packages"
